services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      app:
        condition: service_started
      mongo:
        condition: service_started
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - certbot-www:/var/www/certbot
    environment:
      - DOMAIN=${DOMAIN_NAME}
      - USE_HTTPS=${USE_HTTPS}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - APP_PORT=${APP_PORT}
    networks:
      app-network:
        aliases:
          - nginx
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    hostname: nginx
    container_name: nginx
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    environment:
      - PORT=${APP_PORT}
      - MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/${MONGO_DB}?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_SECURE=${EMAIL_SECURE}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_TLS_REJECT_UNAUTHORIZED=${EMAIL_TLS_REJECT}
      - ADMIN_PASS=${ADMIN_PASS}
    expose:
      - "${APP_PORT}"
    depends_on:
      mongo:
        condition: service_started
    networks:
      app-network:
        aliases:
          - app
    restart: always
    hostname: app
    container_name: app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:${APP_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mongo:
    image: mongo:4.4
    command: ["--auth", "--bind_ip_all"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      app-network:
        aliases:
          - mongo
    restart: always
    hostname: mongo
    container_name: mongo
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Healthcheck desactivado ya que puede causar problemas en algunas versiones
    # Si necesitas activarlo, descomenta estas líneas y ajústalas según tu versión de MongoDB
    # healthcheck:
    #   test: ["CMD", "mongo", "--eval", "db.stats()"]
    #   start_period: 60s
    #   interval: 20s
    #   timeout: 10s
    #   retries: 3

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  mongo-data:
  certbot-etc:
  certbot-var:
  certbot-www: 